on:
  repository_dispatch:
    types: [release]
  push:
    branches: [master]
  pull_request:
    branches: [master]

name: Work flow for CI/CD

jobs:
  build-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Gren
        if: github.event_name == 'repository_dispatch'
        run: npm install github-release-notes -g
      - name: Cache Dependencies
        if: github.event_name != 'repository_dispatch'
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build Project
        if: github.event_name != 'repository_dispatch'
        run: mvn clean install
      - name: Setup settings.xml
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "<settings><servers><server><id>${{ secrets.OSSRH_ID }}</id><username>${{ secrets.OSSRH_USERNAME }}</username><password>${{ secrets.OSSRH_TOKEN }}</password></server></servers><profiles><profile><id>${{ secrets.OSSRH_ID }}</id><activation><activeByDefault>true</activeByDefault></activation><properties><gpg.executable>gpg</gpg.executable><gpg.passphrase>${{ secrets.GPG_PASSPHRASE}}</gpg.passphrase></properties></profile></profiles></settings>" > /home/runner/.m2/settings.xml
      - name: Publish to Maven Central
        if: github.event_name == 'repository_dispatch'
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.OSSRH_USERNAME }}
          nexus_password: ${{ secrets.OSSRH_TOKEN }}
          maven_goals_phases: clean deploy --batch-mode --settings /home/runner/.m2/settings.xml
          maven_profiles: release
      - name: Create GitHub Release
        if: github.event_name == 'repository_dispatch'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ secrets.VERSION }}
          release_name: ${{ secrets.VERSION }}
      - name: Generate Release Notes
        run: gren release --token=${{ secrets.GITHUB_TOKEN }} --override --prefix=v
